-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- COMPANY Table Create SQL
-- 테이블 생성 SQL - COMPANY
CREATE TABLE COMPANY
(
    `COMPANY_ID`       VARCHAR(20)    NOT NULL    COMMENT '회사아이디', 
    `COMPANY_PW`       VARCHAR(20)    NOT NULL    COMMENT '비밀번호', 
    `COMPANY_NAME`     VARCHAR(45)    NOT NULL    COMMENT '회사이름', 
    `COMPANY_TEL`      VARCHAR(45)    NOT NULL    COMMENT '회사대표번호', 
    `COMPANY_ADDRESS`  VARCHAR(45)    NOT NULL    COMMENT '회사주소', 
     PRIMARY KEY (COMPANY_ID)
);

-- 테이블 Comment 설정 SQL - COMPANY
ALTER TABLE COMPANY COMMENT '회사정보';


-- TANK Table Create SQL
-- 테이블 생성 SQL - TANK
CREATE TABLE TANK
(
    `TANK_ID`       VARCHAR(20)      NOT NULL    COMMENT '수조아이디', 
    `COMPANY_ID`    VARCHAR(20)      NOT NULL    COMMENT '회사아이디', 
    `LOCATION`      TEXT             NOT NULL    COMMENT '수조위치', 
    `HEIGHT`        DECIMAL(4, 2)    NOT NULL    COMMENT '수조높이', 
    `DIAMETER`      DECIMAL(4, 2)    NOT NULL    COMMENT '수조직경', 
    `VARIETY`       VARCHAR(20)      NOT NULL    COMMENT '품종', 
    `COMM_DATE`     DATE             NOT NULL    COMMENT '사육개시일', 
    `INIT_POP`      INT              NOT NULL    COMMENT '사육개시개체수', 
    `INIT_DENSITY`  INT              NOT NULL    COMMENT '사육개시밀도', 
    `START_TEMP`    TINYINT          NOT NULL    COMMENT '온도', 
     PRIMARY KEY (TANK_ID)
);

-- 테이블 Comment 설정 SQL - TANK
ALTER TABLE TANK COMMENT '수조';

-- Foreign Key 설정 SQL - TANK(COMPANY_ID) -> COMPANY(COMPANY_ID)
ALTER TABLE TANK
    ADD CONSTRAINT FK_TANK_COMPANY_ID_COMPANY_COMPANY_ID FOREIGN KEY (COMPANY_ID)
        REFERENCES COMPANY (COMPANY_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - TANK(COMPANY_ID)
-- ALTER TABLE TANK
-- DROP FOREIGN KEY FK_TANK_COMPANY_ID_COMPANY_COMPANY_ID;


-- TANK_DATA Table Create SQL
-- 테이블 생성 SQL - TANK_DATA
CREATE TABLE TANK_DATA
(
    `RECORD_SEQ`   INT               NOT NULL    AUTO_INCREMENT COMMENT '기록번호', 
    `TANK_ID`      VARCHAR(20)       NOT NULL    COMMENT '수조아이디', 
    `DO`           DECIMAL(8, 6)     NOT NULL    COMMENT '용존산소량', 
    `PH`           DECIMAL(8, 6)     NOT NULL    COMMENT '수소이온농도', 
    `TEMP`         DECIMAL(9, 7)     NOT NULL    COMMENT '온도', 
    `SALT`         DECIMAL(10, 9)    NOT NULL    COMMENT '염도', 
    `RECORD_DATE`  DATETIME          NOT NULL    COMMENT '기록날짜', 
     PRIMARY KEY (RECORD_SEQ)
);

-- 테이블 Comment 설정 SQL - TANK_DATA
ALTER TABLE TANK_DATA COMMENT '시계열데이터';

-- Foreign Key 설정 SQL - TANK_DATA(TANK_ID) -> TANK(TANK_ID)
ALTER TABLE TANK_DATA
    ADD CONSTRAINT FK_TANK_DATA_TANK_ID_TANK_TANK_ID FOREIGN KEY (TANK_ID)
        REFERENCES TANK (TANK_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - TANK_DATA(TANK_ID)
-- ALTER TABLE TANK_DATA
-- DROP FOREIGN KEY FK_TANK_DATA_TANK_ID_TANK_TANK_ID;


-- ALARM_PRE Table Create SQL
-- 테이블 생성 SQL - ALARM_PRE
CREATE TABLE ALARM_PRE
(
    `ALARM_SEQ`      INT            NOT NULL    AUTO_INCREMENT COMMENT '알람순번', 
    `TANK_ID`        VARCHAR(20)    NOT NULL    COMMENT '수조아이디', 
    `ALARM_CONTENT`  TEXT           NOT NULL    COMMENT '알람내용', 
    `COMPANY_ID`     VARCHAR(20)    NOT NULL    COMMENT '회사아이디', 
     PRIMARY KEY (ALARM_SEQ)
);

-- 테이블 Comment 설정 SQL - ALARM_PRE
ALTER TABLE ALARM_PRE COMMENT '예측 알람(알람메시지 저장 테이블)';

-- Foreign Key 설정 SQL - ALARM_PRE(TANK_ID) -> TANK(TANK_ID)
ALTER TABLE ALARM_PRE
    ADD CONSTRAINT FK_ALARM_PRE_TANK_ID_TANK_TANK_ID FOREIGN KEY (TANK_ID)
        REFERENCES TANK (TANK_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - ALARM_PRE(TANK_ID)
-- ALTER TABLE ALARM_PRE
-- DROP FOREIGN KEY FK_ALARM_PRE_TANK_ID_TANK_TANK_ID;

-- Foreign Key 설정 SQL - ALARM_PRE(COMPANY_ID) -> COMPANY(COMPANY_ID)
ALTER TABLE ALARM_PRE
    ADD CONSTRAINT FK_ALARM_PRE_COMPANY_ID_COMPANY_COMPANY_ID FOREIGN KEY (COMPANY_ID)
        REFERENCES COMPANY (COMPANY_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - ALARM_PRE(COMPANY_ID)
-- ALTER TABLE ALARM_PRE
-- DROP FOREIGN KEY FK_ALARM_PRE_COMPANY_ID_COMPANY_COMPANY_ID;


-- ALARM Table Create SQL
-- 테이블 생성 SQL - ALARM
CREATE TABLE ALARM
(
    `ALARM_SEQ`      INT            NOT NULL    AUTO_INCREMENT COMMENT '알람순번', 
    `TANK_ID`        VARCHAR(20)    NOT NULL    COMMENT '수조아이디', 
    `ALARM_CONTENT`  TEXT           NOT NULL    COMMENT '알람내용', 
    `ALARM_DATE`     DATETIME       NOT NULL    COMMENT '알람등록날짜', 
    `COMPANY_ID`     VARCHAR(20)    NOT NULL    COMMENT '회사아이디', 
     PRIMARY KEY (ALARM_SEQ)
);

-- 테이블 Comment 설정 SQL - ALARM
ALTER TABLE ALARM COMMENT '기록 알람(알람메시지내용저장테이블)';

-- Foreign Key 설정 SQL - ALARM(TANK_ID) -> TANK(TANK_ID)
ALTER TABLE ALARM
    ADD CONSTRAINT FK_ALARM_TANK_ID_TANK_TANK_ID FOREIGN KEY (TANK_ID)
        REFERENCES TANK (TANK_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - ALARM(TANK_ID)
-- ALTER TABLE ALARM
-- DROP FOREIGN KEY FK_ALARM_TANK_ID_TANK_TANK_ID;

-- Foreign Key 설정 SQL - ALARM(COMPANY_ID) -> COMPANY(COMPANY_ID)
ALTER TABLE ALARM
    ADD CONSTRAINT FK_ALARM_COMPANY_ID_COMPANY_COMPANY_ID FOREIGN KEY (COMPANY_ID)
        REFERENCES COMPANY (COMPANY_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - ALARM(COMPANY_ID)
-- ALTER TABLE ALARM
-- DROP FOREIGN KEY FK_ALARM_COMPANY_ID_COMPANY_COMPANY_ID;


-- TANK_RECORD_PRE Table Create SQL
-- 테이블 생성 SQL - TANK_RECORD_PRE
CREATE TABLE TANK_RECORD_PRE
(
    `RECORD_PRE_SEQ`  INT               NOT NULL    AUTO_INCREMENT COMMENT '기록번호', 
    `TANK_ID`         VARCHAR(20)       NOT NULL    COMMENT '수조아이디', 
    `DO`              DECIMAL(8, 6)     NOT NULL    COMMENT '용존산소량', 
    `PH`              DECIMAL(8, 7)     NOT NULL    COMMENT '수소이온농도', 
    `TEMP`            DECIMAL(9, 7)     NOT NULL    COMMENT '온도', 
    `SALT`            DECIMAL(10, 9)    NOT NULL    COMMENT '염도', 
    `AMMONIA`         DECIMAL(8, 6)     NOT NULL    COMMENT '암모니아', 
    `NITRITE`         DECIMAL(8, 6)     NOT NULL    COMMENT '아질산', 
    `RECORD_DATE`     DATETIME          NOT NULL    COMMENT '기록날짜', 
     PRIMARY KEY (RECORD_PRE_SEQ)
);

-- 테이블 Comment 설정 SQL - TANK_RECORD_PRE
ALTER TABLE TANK_RECORD_PRE COMMENT '수조예측값데이터';

-- Foreign Key 설정 SQL - TANK_RECORD_PRE(TANK_ID) -> TANK(TANK_ID)
ALTER TABLE TANK_RECORD_PRE
    ADD CONSTRAINT FK_TANK_RECORD_PRE_TANK_ID_TANK_TANK_ID FOREIGN KEY (TANK_ID)
        REFERENCES TANK (TANK_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - TANK_RECORD_PRE(TANK_ID)
-- ALTER TABLE TANK_RECORD_PRE
-- DROP FOREIGN KEY FK_TANK_RECORD_PRE_TANK_ID_TANK_TANK_ID;


-- TANK_RECORD Table Create SQL
-- 테이블 생성 SQL - TANK_RECORD
CREATE TABLE TANK_RECORD
(
    `RECORD_SEQ`   INT               NOT NULL    AUTO_INCREMENT COMMENT '기록번호', 
    `TANK_ID`      VARCHAR(20)       NOT NULL    COMMENT '수조아이디', 
    `DO`           DECIMAL(8, 6)     NOT NULL    COMMENT '용존산소량', 
    `PH`           DECIMAL(8, 7)     NOT NULL    COMMENT '수소이온농도', 
    `TEMP`         DECIMAL(9, 7)     NOT NULL    COMMENT '온도', 
    `SALT`         DECIMAL(10, 9)    NOT NULL    COMMENT '염도', 
    `AMMONIA`      DECIMAL(8, 6)     NOT NULL    COMMENT '암모니아', 
    `NITRITE`      DECIMAL(8, 6)     NOT NULL    COMMENT '아질산', 
    `RECORD_DATE`  DATETIME          NOT NULL    COMMENT '기록날짜', 
     PRIMARY KEY (RECORD_SEQ)
);

-- 테이블 Comment 설정 SQL - TANK_RECORD
ALTER TABLE TANK_RECORD COMMENT '수조데이터';

-- Foreign Key 설정 SQL - TANK_RECORD(TANK_ID) -> TANK(TANK_ID)
ALTER TABLE TANK_RECORD
    ADD CONSTRAINT FK_TANK_RECORD_TANK_ID_TANK_TANK_ID FOREIGN KEY (TANK_ID)
        REFERENCES TANK (TANK_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - TANK_RECORD(TANK_ID)
-- ALTER TABLE TANK_RECORD
-- DROP FOREIGN KEY FK_TANK_RECORD_TANK_ID_TANK_TANK_ID;


